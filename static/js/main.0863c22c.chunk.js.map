{"version":3,"sources":["components/Card.js","components/InhabitantsList.js","components/SearchInput.js","components/FilterBar.js","redux/reducers/uiReducer.js","redux/reducers/dataReducer.js","redux/store.js","redux/types.js","util/dataRequest.js","util/dataFilter.js","redux/actions/dataActions.js","components/SearchBar.js","components/Nav.js","pages/home.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","inhabitant","id","name","thumbnail","age","weight","height","hair_color","professions","friends","selected","handleChoose","className","onClick","e","src","alt","handleSearchFriends","firstName","split","some","ending","slice","length","toLowerCase","gender","isNaN","Math","floor","style","backgroundColor","Array","isArray","join","InhabitantsList","useState","setSelected","number","inhabitants","filter","item","index","map","key","SearchInput","type","placeholder","onChange","handleChange","value","phrase","onKeyPress","handleKeyPress","FilterBar","React","memo","loading","filterHandle","initialState","errors","data","searchResult","hint","middleware","thunk","reducers","combineReducers","UI","state","action","payload","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","dataRequest","getData","fetch","then","res","json","dataFilter","getFiltered","filterType","searchPhrase","startsWith","arrOfProf","prof","trim","every","profForSearch","border","parseFloat","min","max","getFriends","push","forEach","friendName","friend","potentialFriend","dispatch","Object","keys","catch","err","connect","hintUI","searchData","getState","setFilter","setHint","setPhrase","useEffect","useCallback","handleSearch","target","which","disabled","Nav","handleShowMore","href","handleClear","mapActionsToProps","searchFriends","searchClear","setInhabitants","count","setCount","preventDefault","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kQAmFeA,G,MA9EF,SAAAC,GACX,IADoB,EAqBhBA,EAAMC,WATRC,EAZkB,EAYlBA,GACAC,EAbkB,EAalBA,KACAC,EAdkB,EAclBA,UACAC,EAfkB,EAelBA,IACAC,EAhBkB,EAgBlBA,OACAC,EAjBkB,EAiBlBA,OACAC,EAlBkB,EAkBlBA,WACAC,EAnBkB,EAmBlBA,YACAC,EApBkB,EAoBlBA,QAGMC,EAA2BX,EAA3BW,SAAUC,EAAiBZ,EAAjBY,aAClB,OACE,yBACEC,UAAWF,IAAaR,EAAO,oBAAsB,OACrDW,QAAS,SAAAC,GAAC,OAAIH,EAAaG,EAAGZ,KAE9B,yBAAKU,UAAU,kBACb,yBAAKG,IAAKZ,EAAWa,IAAKd,IAC1B,yBAAKU,UAAU,WAAWX,GACzBS,IAAaR,EACZ,4BAAQW,QAAS,SAAAC,GAAC,OAAIf,EAAMkB,oBAAoBH,EAAGZ,KAAnD,oBAGE,MAEN,yBAAKU,UAAU,aAAaV,GAC5B,yBAAKU,UAAU,YAAf,QACO,2BAAIR,IAEX,yBAAKQ,UAAU,eAAf,WACU,2BAAIV,EA1CH,SAAAA,GACb,IACIgB,EAAYhB,EAAKiB,MAAM,KAAK,GAChC,MAFgB,CAAC,KAAM,KAAM,KAAM,KAAM,MAE1BC,MACb,SAAAC,GAAM,OAAIA,IAAWH,EAAUI,MAAMJ,EAAUK,OAAS,GAAGC,iBAEzD,SACA,OAmCmBC,CAAOvB,GAAQ,KAEpC,yBAAKU,UAAU,eAAf,WACU,2BAAIc,MAAMrB,GAAU,GAAKsB,KAAKC,MAAMvB,KAE9C,yBAAKO,UAAU,eAAf,WACU,2BAAIc,MAAMpB,GAAU,GAAKqB,KAAKC,MAAMtB,KAE9C,yBAAKM,UAAU,mBAAf,eACc,2BAAIL,GAAgB,IAC/BA,EACC,0BAAMsB,MAAO,CAAEC,gBAAiBvB,IAAhC,gBAGE,MAEN,yBAAKK,UAAU,oBAAf,eACe,IACb,2BACGmB,MAAMC,QAAQxB,GAAeA,EAAYyB,KAAK,MAAQzB,IAG3D,yBAAKI,UAAU,gBAAf,YACW,2BAAImB,MAAMC,QAAQvB,GAAWA,EAAQwB,KAAK,MAAQxB,OC/BpDyB,EAlCS,SAAAnC,GAAU,IAAD,EACCoC,mBAAS,IADV,mBACxBzB,EADwB,KACd0B,EADc,KAEvBC,EAAwBtC,EAAxBsC,OAAQC,EAAgBvC,EAAhBuC,YAEV3B,EAAe,SAACG,EAAGZ,GAEvBkC,EADoB1B,IAAaR,EAAO,GAAKA,IAI/C,OACE,8BACGoC,GAAsC,IAAvBA,EAAYf,OACxBe,EACGC,QAAO,SAACC,EAAMC,GAAP,OAAiBA,EAAQJ,KAChCK,KAAI,SAAC1C,EAAYyC,GAAb,OACH,kBAAC,EAAD,CACEzC,WAAYA,EACZ2C,IAAG,aAAQF,EAAQzC,EAAWC,IAC9BgB,oBAAqBlB,EAAMkB,oBAC3BP,SAAUA,EACVC,aAAcA,OAGpB,OCNKiC,EApBK,SAAA7C,GAClB,OACE,yBAAKa,UAAU,eACb,2BACEiC,KAAK,OACLC,YAAY,0BACZC,SAAUhD,EAAMiD,aAChBC,MAAOlD,EAAMmD,OACbC,WAAYpD,EAAMqD,mBC0BXC,EAlCGC,IAAMC,MAAK,SAAAxD,GAC3B,IASQyD,EAAoBzD,EAApByD,QAASjB,EAAWxC,EAAXwC,OACjB,OACE,yBAAK3B,UAAW4C,EAAU,sBAAwB,IAChD,4BAZS,CACX,OACA,KACA,MACA,SACA,SACA,aACA,cAMUd,KAAI,SAACF,EAAMC,GAAP,OACR,wBACEE,IAAG,eAAUF,GACb7B,UAAW2B,IAAWC,EAAO,WAAa,GAC1C3B,QAAS,kBAAMd,EAAM0D,aAAajB,KAEjCA,W,6BCrBPkB,EAAe,CACnBF,SAAS,EACTG,OAAQ,ICFJD,EAAe,CACnBE,KAAM,GACNC,aAAc,GACdC,KAAM,ICIFC,EAAa,CAACC,KAEdC,EAAWC,YAAgB,CAC/BC,GFLa,WAAwC,IAA/BC,EAA8B,uDAAtBV,EAAcW,EAAQ,uCACpD,OAAQA,EAAOxB,MACb,IGRmB,UHSjB,OAAO,eAAKuB,EAAZ,CAAmBZ,SAAS,IAC9B,IGTsB,aHUpB,MAAO,CAAEA,SAAS,EAAOG,OAAQU,EAAOC,SAC1C,IGVwB,eHWtB,MAAO,CAAEd,SAAS,EAAOG,OAAQ,IACnC,QACE,OAAO,eAAKS,KEHhBR,KDLa,WAAwC,IAA/BQ,EAA8B,uDAAtBV,EAAcW,EAAQ,uCAChDP,EAAO,GACX,OAAQO,EAAOxB,MACb,IELoB,WFOlB,OADAiB,EAAO,kCACA,eAAKM,EAAZ,CAAmBR,KAAMS,EAAOC,QAASR,KAAMA,IACjD,IEPuB,cFYrB,OAJAA,EACEO,EAAOC,QAAQ/C,OAAS,EAAxB,gBACa8C,EAAOC,QAAQ/C,OAD5B,+BAGK,eAAK6C,EAAZ,CAAmBP,aAAcQ,EAAOC,QAASR,KAAMA,IACzD,IEZ0B,iBFiBxB,OAJAA,EACEO,EAAOC,QAAQ/C,OAAS,EAAxB,gBACa8C,EAAOC,QAAQ/C,OAAS,EADrC,4BAGK,eAAK6C,EAAZ,CAAmBP,aAAcQ,EAAOC,QAASR,KAAMA,IACzD,IEjBwB,eFmBtB,OADAA,EAAO,6DACA,eAAKM,EAAZ,CAAmBP,aAAc,GAAIC,KAAMA,IAC7C,QACE,OAAOM,MCLEG,EATDC,YACZP,EAVmB,GAYnBQ,YACEC,IAAe,WAAf,EAAmBX,GACnBY,OAAOC,8BAAgCD,OAAOC,iCEbnCC,EARK,CAClBC,QADkB,WAIhB,OAAOC,MADL,0EACqBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,Y,OC+C5BC,EAnDI,CACjBC,YADiB,SACLxB,EAAMyB,EAAYC,GAC5B,GAAmB,SAAfD,EAEF,OADAC,EAAeA,EAAa9D,cACrBoC,EAAKrB,QAAO,SAAAvC,GAAU,OAC3BA,EAAWqF,GACR7D,cACAL,MAAM,KACNC,MAAK,SAAAlB,GAAI,OAAIA,EAAKqF,WAAWD,SAE7B,GAAmB,eAAfD,EAA6B,CACtC,IAAMG,EAAYF,EACf9D,cACAL,MAAM,KACNuB,KAAI,SAAA+C,GAAI,OAAIA,EAAKC,UACpB,OAAO9B,EAAKrB,QAAO,SAAAvC,GAAU,OAC3BwF,EAAUG,OAAM,SAAAC,GAAa,OAC3B5F,EAAU,YAAgBoB,MACxB,SAAAqE,GAAI,OAAIA,EAAKjE,gBAAkBoE,WAIhC,GAAmB,eAAfP,EAET,OADAC,EAAeA,EAAa9D,cACrBoC,EAAKrB,QAAO,SAAAvC,GAAU,OAC3BA,EAAU,WAAewB,cAAc+D,WAAWD,MAGpD,IAAMO,EAASP,EAAanE,MAAM,KAAKuB,KAAI,SAAAF,GAAI,OAAIsD,WAAWtD,MAC9D,OAAOoB,EAAKrB,QACV,SAAAvC,GAAU,OACR2B,KAAKC,MAAM5B,EAAWqF,KAAgB1D,KAAKoE,IAAL,MAAApE,KAAI,YAAQkE,KAClDlE,KAAKC,MAAM5B,EAAWqF,KAAgB1D,KAAKqE,IAAL,MAAArE,KAAI,YAAQkE,QAI1DI,WApCiB,SAoCNrC,EAAM1D,GACf,IAAMO,EAAU,GAUhB,OATAA,EAAQyF,KAAR,MAAAzF,EAAO,YAASmD,EAAKrB,QAAO,SAAAvC,GAAU,OAAIA,EAAWE,OAASA,OAC9D0D,EACGrB,QAAO,SAAAvC,GAAU,OAAIA,EAAWE,OAASA,KAAM,GAC/CO,QAAQ0F,SAAQ,SAAAC,GACf,IAAMC,EAASzC,EAAKrB,QAClB,SAAA+D,GAAe,OAAIA,EAAgBpG,OAASkG,KAE9C3F,EAAQyF,KAAR,MAAAzF,EAAO,YAAS4F,OAEb5F,IChCEqE,EAAU,kBAAM,SAAAyB,GAC3BA,EAAS,CAAE1D,KHfU,YGgBrBgC,EACGC,UACAE,MAAK,SAAAC,GACJsB,EAAS,CACP1D,KHfgB,WGgBhByB,QAASW,EAAIuB,OAAOC,KAAKxB,MAE3BsB,EAAS,CAAE1D,KHrBW,oBGuBvB6D,OAAM,SAAAC,GACLJ,EAAS,CACP1D,KH1BkB,aG2BlByB,QAAS,CAAEqC,IAAK,uDCiETC,eAPS,SAAAxC,GAAK,MAAK,CAChCyC,OAAQzC,EAAMD,GAAG0C,OACjBrD,QAASY,EAAMD,GAAGX,QAClBG,OAAQS,EAAMD,GAAGR,OACjBG,KAAMM,EAAMR,KAAKE,QAGqB,CAAEgD,WD5DhB,SAACzB,EAAYC,GAAb,OAA8B,SAAAiB,GAAa,IAC3D3C,EAASW,EAAMwC,WAAWnD,KAA1BA,KACR2C,EAAS,CAAE1D,KHnCU,YGoCrB0D,EAAS,CACP1D,KH/BuB,cGgCvByB,QAASa,EAAWC,YAAYxB,EAAMyB,EAAYC,KAEpDiB,EAAS,CAAE1D,KHtCe,oBI2Fb+D,EAnFG,SAAA7G,GAAU,IAAD,EACGoC,mBAAS,IADZ,mBAClBI,EADkB,KACVyE,EADU,OAED7E,mBAAS,IAFR,mBAElB2B,EAFkB,KAEZmD,EAFY,OAGG9E,mBAAS,IAHZ,mBAGlBe,EAHkB,KAGVgE,EAHU,KAKzBC,qBAAU,WACRpH,EAAMyD,SAAWyD,EAAQ,yBACxB,CAAClH,EAAMyD,UAEV2D,qBAAU,WACRpH,EAAM+D,MAAQmD,EAAQlH,EAAM+D,QAC3B,CAAC/D,EAAM+D,OAEVqD,qBAAU,WACRpH,EAAM4D,OAAOgD,KAAOM,EAAQlH,EAAM4D,OAAOgD,OACxC,CAAC5G,EAAM4D,SAEV,IAAMF,EAAe2D,uBACnB,SAAA7E,GASE0E,EAPa,SAAX1E,GAAgC,eAAXA,EACjB,6DACW,SAAXA,EACA,4EACW,eAAXA,EACA,gEACA,8DAENyE,EAAUzE,KAEZ,CAACyE,IAcGK,EAAe,WACnBtH,EAAM+G,WAAWvE,EAAQW,IAGnBM,EAAYzD,EAAZyD,QAER,OACE,gCACE,kBAAC,EAAD,CACEjB,OAAQA,EACRkB,aAAcA,EACdD,QAASA,IAEX,kBAAC,EAAD,CACEN,OAAQA,EACRF,aA1Be,SAAAlC,GACnB,IAAMmC,EAAQnC,EAAEwG,OAAOrE,MACvBiE,EAAUjE,IAyBNG,eAtBiB,SAAAtC,GACL,KAAZA,EAAEyG,OACJF,OAsBA,4BAAQxG,QAASwG,EAAcG,SAAUhE,GAAzC,UAGCM,EAAO,yBAAKlD,UAAU,QAAQkD,GAAc,SC1DpC2D,EAfH,SAAA1H,GACV,OACE,6BACE,4BAAQc,QAASd,EAAM2H,gBAAvB,aADF,KAC8D,IAC5D,uBAAGC,KAAK,UAAR,MAFF,KAE4B,IAC1B,4BAAQ9G,QAASd,EAAM6H,aAAvB,WCqEAC,EAAoB,CACxB/C,UACAgD,cHnC2B,SAAA5H,GAAI,OAAI,SAAAqG,GAAa,IACxC3C,EAASW,EAAMwC,WAAWnD,KAA1BA,KACR2C,EAAS,CAAE1D,KH7CU,YG8CrB0D,EAAS,CACP1D,KHxC0B,iBGyC1ByB,QAASa,EAAWc,WAAWrC,EAAM1D,KAEvCqG,EAAS,CAAE1D,KHhDe,mBM6E1BkF,YH1ByB,kBAAM,SAAAxB,GAC/BA,EAAS,CAAE1D,KHtDU,YGuDrB0D,EAAS,CACP1D,KHhDwB,iBGkD1B0D,EAAS,CAAE1D,KHxDe,oBMgFb+D,eAXS,SAAAxC,GAAK,MAAK,CAChCR,KAAMQ,EAAMR,KAAKA,KACjBC,aAAcO,EAAMR,KAAKC,gBASagE,EAAzBjB,EA5DF,SAAA7G,GAAU,IAAD,EACkBoC,mBAAS,IAD3B,mBACbG,EADa,KACA0F,EADA,OAEM7F,mBAAS,IAFf,mBAEb8F,EAFa,KAENC,EAFM,KALpBf,qBAAU,WACR5C,EAAMgC,SAASzB,OACd,IASHqC,qBAAU,WACRa,EAAejI,EAAM8D,gBACpB,CAAC9D,EAAM+D,KAAM/D,EAAM8D,eAiBtB,OACE,6BACE,wBAAI5D,GAAG,SAAP,+BACA,kBAAC,EAAD,MAC+B,IAA9BF,EAAM8D,aAAatC,OAClB,kBAAC,EAAD,CACEe,YAAaA,EACbD,OAAQ4F,EACRhH,oBAvBoB,SAACH,EAAGZ,GAC9BY,EAAEqH,iBACFpI,EAAM+H,cAAc5H,MAuBd,KAC2B,IAA9BH,EAAM8D,aAAatC,OAClB,kBAAC,EAAD,CAAKmG,eAtBY,WAErBQ,EADiBD,EAAQ,KAqBgBL,YAjBvB,WAClB7H,EAAMgI,cACNG,EAAS,OAgBH,SCzCKE,EAVH,WACV,OACE,yBAAKxH,UAAU,OACb,kBAAC,IAAD,CAAU2D,MAAOA,GACf,kBAAC,EAAD,SCFY8D,QACW,cAA7B1D,OAAO2D,SAASC,UAEe,UAA7B5D,OAAO2D,SAASC,UAEhB5D,OAAO2D,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/D,MAAK,SAAAgE,GACjCA,EAAaC,kB","file":"static/js/main.0863c22c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./css/card.css\";\r\n\r\nconst Card = props => {\r\n  const gender = name => {\r\n    const endings = [\"ia\", \"te\", \"le\", \"li\", \"ki\"];\r\n    let firstName = name.split(\" \")[0];\r\n    return endings.some(\r\n      ending => ending === firstName.slice(firstName.length - 2).toLowerCase()\r\n    )\r\n      ? \"Female\"\r\n      : \"Male\";\r\n  };\r\n\r\n  const {\r\n    id,\r\n    name,\r\n    thumbnail,\r\n    age,\r\n    weight,\r\n    height,\r\n    hair_color,\r\n    professions,\r\n    friends\r\n  } = props.inhabitant;\r\n\r\n  const { selected, handleChoose } = props;\r\n  return (\r\n    <div\r\n      className={selected === name ? \"card selectedCard\" : \"card\"}\r\n      onClick={e => handleChoose(e, name)}\r\n    >\r\n      <div className=\"card-thumbnail\">\r\n        <img src={thumbnail} alt={name} />\r\n        <div className=\"card-id\">{id}</div>\r\n        {selected === name ? (\r\n          <button onClick={e => props.handleSearchFriends(e, name)}>\r\n            Find all friends\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n      <div className=\"card-name\">{name}</div>\r\n      <div className=\"card-age\">\r\n        Age: <i>{age}</i>\r\n      </div>\r\n      <div className=\"card-gender\">\r\n        Gender: <i>{name ? gender(name) : \"\"}</i>\r\n      </div>\r\n      <div className=\"card-weight\">\r\n        Weight: <i>{isNaN(weight) ? \"\" : Math.floor(weight)}</i>\r\n      </div>\r\n      <div className=\"card-height\">\r\n        Height: <i>{isNaN(height) ? \"\" : Math.floor(height)}</i>\r\n      </div>\r\n      <div className=\"card-hair_color\">\r\n        Hair color: <i>{hair_color}</i>{\" \"}\r\n        {hair_color ? (\r\n          <span style={{ backgroundColor: hair_color }}>\r\n            &nbsp;&nbsp;&nbsp;\r\n          </span>\r\n        ) : null}\r\n      </div>\r\n      <div className=\"card-professions\">\r\n        Professions:{\" \"}\r\n        <i>\r\n          {Array.isArray(professions) ? professions.join(\", \") : professions}\r\n        </i>\r\n      </div>\r\n      <div className=\"card-friends\">\r\n        Friends: <i>{Array.isArray(friends) ? friends.join(\", \") : friends}</i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCard.propTypes = {\r\n  inhabitant: PropTypes.object.isRequired,\r\n  selected: PropTypes.string.isRequired,\r\n  handleSearchFriends: PropTypes.func.isRequired,\r\n  handleChoose: PropTypes.func.isRequired\r\n};\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Components\r\nimport Card from \"./Card\";\r\n\r\nconst InhabitantsList = props => {\r\n  const [selected, setSelected] = useState(\"\");\r\n  const { number, inhabitants } = props;\r\n\r\n  const handleChoose = (e, name) => {\r\n    const newSelected = selected === name ? \"\" : name;\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      {inhabitants && inhabitants.length !== 0\r\n        ? inhabitants\r\n            .filter((item, index) => index < number)\r\n            .map((inhabitant, index) => (\r\n              <Card\r\n                inhabitant={inhabitant}\r\n                key={`key${index + inhabitant.id}`}\r\n                handleSearchFriends={props.handleSearchFriends}\r\n                selected={selected}\r\n                handleChoose={handleChoose}\r\n              />\r\n            ))\r\n        : null}\r\n    </main>\r\n  );\r\n};\r\n\r\nInhabitantsList.propTypes = {\r\n  number: PropTypes.number.isRequired,\r\n  inhabitants: PropTypes.array.isRequired,\r\n  handleSearchFriends: PropTypes.func.isRequired\r\n};\r\n\r\nexport default InhabitantsList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SearchInput = props => {\r\n  return (\r\n    <div className=\"searchInput\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Who are you looking for\"\r\n        onChange={props.handleChange}\r\n        value={props.phrase}\r\n        onKeyPress={props.handleKeyPress}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSearchInput.propTypes = {\r\n  phrase: PropTypes.string,\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleKeyPress: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchInput;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FilterBar = React.memo(props => {\r\n  const menu = [\r\n    \"name\",\r\n    \"id\",\r\n    \"age\",\r\n    \"weight\",\r\n    \"height\",\r\n    \"hair color\",\r\n    \"profession\"\r\n  ];\r\n  const { loading, filter } = props;\r\n  return (\r\n    <div className={loading ? \"filtersMenuDisabled\" : \"\"}>\r\n      <ul>\r\n        {menu.map((item, index) => (\r\n          <li\r\n            key={`menu+${index}`}\r\n            className={filter === item ? \"selected\" : \"\"}\r\n            onClick={() => props.filterHandle(item)}\r\n          >\r\n            {item}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n});\r\n\r\nFilterBar.propTypes = {\r\n  loading: PropTypes.bool,\r\n  filter: PropTypes.string,\r\n  filterHandle: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FilterBar;\r\n","import { LOADING, SET_ERRORS, CLEAR_ERRORS } from \"../types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errors: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return { ...state, loading: true };\r\n    case SET_ERRORS:\r\n      return { loading: false, errors: action.payload };\r\n    case CLEAR_ERRORS:\r\n      return { loading: false, errors: {} };\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n","import { SET_DATA, SEARCH_DATA, SEARCH_FRIENDS, SEARCH_CLEAR } from \"../types\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  searchResult: [],\r\n  hint: \"\"\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  let hint = \"\";\r\n  switch (action.type) {\r\n    case SET_DATA:\r\n      hint = \"Loading completed, let's search\";\r\n      return { ...state, data: action.payload, hint: hint };\r\n    case SEARCH_DATA:\r\n      hint =\r\n        action.payload.length > 0\r\n          ? `Found ${action.payload.length} inhabitant`\r\n          : `Nothing found`;\r\n      return { ...state, searchResult: action.payload, hint: hint };\r\n    case SEARCH_FRIENDS:\r\n      hint =\r\n        action.payload.length > 0\r\n          ? `Found ${action.payload.length - 1} friends`\r\n          : `Nothing found`;\r\n      return { ...state, searchResult: action.payload, hint: hint };\r\n    case SEARCH_CLEAR:\r\n      hint = 'Select a filter type, fill in the field and click \"Search\"';\r\n      return { ...state, searchResult: [], hint: hint };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n// Reducers\r\nimport uiReducer from \"./reducers/uiReducer\";\r\nimport dataReducer from \"./reducers/dataReducer\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n  UI: uiReducer,\r\n  data: dataReducer\r\n});\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","// UI reducer types\r\nexport const LOADING = \"LOADING\";\r\nexport const SET_ERRORS = \"SET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n\r\n// Data reducer types\r\nexport const SET_DATA = \"SET_DATA\";\r\nexport const SEARCH_DATA = \"SEARCH_DATA\";\r\nexport const SEARCH_FRIENDS = \"SEARCH_FRIENDS\";\r\nexport const SEARCH_CLEAR = \"SEARCH_CLEAR\";\r\n","const dataRequest = {\r\n  getData() {\r\n    const endPoint =\r\n      \"https://raw.githubusercontent.com/rrafols/mobile_test/master/data.json\";\r\n    return fetch(endPoint).then(res => res.json());\r\n  }\r\n};\r\n\r\nexport default dataRequest;\r\n","const dataFilter = {\r\n  getFiltered(data, filterType, searchPhrase) {\r\n    if (filterType === \"name\") {\r\n      searchPhrase = searchPhrase.toLowerCase();\r\n      return data.filter(inhabitant =>\r\n        inhabitant[filterType]\r\n          .toLowerCase()\r\n          .split(\" \")\r\n          .some(name => name.startsWith(searchPhrase))\r\n      );\r\n    } else if (filterType === \"profession\") {\r\n      const arrOfProf = searchPhrase\r\n        .toLowerCase()\r\n        .split(\",\")\r\n        .map(prof => prof.trim());\r\n      return data.filter(inhabitant =>\r\n        arrOfProf.every(profForSearch =>\r\n          inhabitant[\"professions\"].some(\r\n            prof => prof.toLowerCase() === profForSearch\r\n          )\r\n        )\r\n      );\r\n    } else if (filterType === \"hair color\") {\r\n      searchPhrase = searchPhrase.toLowerCase();\r\n      return data.filter(inhabitant =>\r\n        inhabitant[\"hair_color\"].toLowerCase().startsWith(searchPhrase)\r\n      );\r\n    } else {\r\n      const border = searchPhrase.split(\"-\").map(item => parseFloat(item));\r\n      return data.filter(\r\n        inhabitant =>\r\n          Math.floor(inhabitant[filterType]) >= Math.min(...border) &&\r\n          Math.floor(inhabitant[filterType]) <= Math.max(...border)\r\n      );\r\n    }\r\n  },\r\n  getFriends(data, name) {\r\n    const friends = [];\r\n    friends.push(...data.filter(inhabitant => inhabitant.name === name));\r\n    data\r\n      .filter(inhabitant => inhabitant.name === name)[0]\r\n      .friends.forEach(friendName => {\r\n        const friend = data.filter(\r\n          potentialFriend => potentialFriend.name === friendName\r\n        );\r\n        friends.push(...friend);\r\n      });\r\n    return friends;\r\n  }\r\n};\r\n\r\nexport default dataFilter;\r\n","import {\r\n  SET_DATA,\r\n  SEARCH_DATA,\r\n  SEARCH_FRIENDS,\r\n  SEARCH_CLEAR,\r\n  LOADING,\r\n  SET_ERRORS,\r\n  CLEAR_ERRORS\r\n} from \"../types\";\r\n\r\nimport store from \"../store\";\r\n\r\nimport dataRequest from \"../../util/dataRequest\";\r\nimport dataFilter from \"../../util/dataFilter\";\r\n\r\nexport const getData = () => dispatch => {\r\n  dispatch({ type: LOADING });\r\n  dataRequest\r\n    .getData()\r\n    .then(res => {\r\n      dispatch({\r\n        type: SET_DATA,\r\n        payload: res[Object.keys(res)]\r\n      });\r\n      dispatch({ type: CLEAR_ERRORS });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: SET_ERRORS,\r\n        payload: { err: \"Something went wrong. Please, reload the app\" }\r\n      });\r\n    });\r\n};\r\n\r\nexport const searchData = (filterType, searchPhrase) => dispatch => {\r\n  const { data } = store.getState().data;\r\n  dispatch({ type: LOADING });\r\n  dispatch({\r\n    type: SEARCH_DATA,\r\n    payload: dataFilter.getFiltered(data, filterType, searchPhrase)\r\n  });\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n\r\nexport const searchFriends = name => dispatch => {\r\n  const { data } = store.getState().data;\r\n  dispatch({ type: LOADING });\r\n  dispatch({\r\n    type: SEARCH_FRIENDS,\r\n    payload: dataFilter.getFriends(data, name)\r\n  });\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n\r\nexport const searchClear = () => dispatch => {\r\n  dispatch({ type: LOADING });\r\n  dispatch({\r\n    type: SEARCH_CLEAR\r\n  });\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Components\r\nimport SearchInput from \"./SearchInput\";\r\nimport FilterBar from \"./FilterBar\";\r\n\r\n// redux\r\nimport { connect } from \"react-redux\";\r\nimport { searchData } from \"../redux/actions/dataActions\";\r\n\r\nconst SearchBar = props => {\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [hint, setHint] = useState(\"\");\r\n  const [phrase, setPhrase] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    props.loading && setHint(\"Waiting for data...\");\r\n  }, [props.loading]); // loading\r\n\r\n  useEffect(() => {\r\n    props.hint && setHint(props.hint);\r\n  }, [props.hint]); // loading finished\r\n\r\n  useEffect(() => {\r\n    props.errors.err && setHint(props.errors.err);\r\n  }, [props.errors]); // errors\r\n\r\n  const filterHandle = useCallback(\r\n    filter => {\r\n      const newHint =\r\n        filter !== \"name\" && filter !== \"hair color\"\r\n          ? \"You can set the interval if you use a dash between numbers\"\r\n          : filter === \"name\"\r\n          ? \"The search phrase is compared with the first and second name individually\"\r\n          : filter === \"profession\"\r\n          ? \"You can set list of professions if you use a comma between it\"\r\n          : 'Select a filter type, fill in the field and click \"Search\"';\r\n      setHint(newHint);\r\n      setFilter(filter);\r\n    },\r\n    [setFilter]\r\n  );\r\n\r\n  const handleChange = e => {\r\n    const value = e.target.value;\r\n    setPhrase(value);\r\n  };\r\n\r\n  const handleKeyPress = e => {\r\n    if (e.which === 13) {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    props.searchData(filter, phrase);\r\n  };\r\n\r\n  const { loading } = props;\r\n\r\n  return (\r\n    <header>\r\n      <FilterBar\r\n        filter={filter}\r\n        filterHandle={filterHandle}\r\n        loading={loading}\r\n      />\r\n      <SearchInput\r\n        phrase={phrase}\r\n        handleChange={handleChange}\r\n        handleKeyPress={handleKeyPress}\r\n      />\r\n      <button onClick={handleSearch} disabled={loading}>\r\n        Search\r\n      </button>\r\n      {hint ? <div className=\"hint\">{hint}</div> : null}\r\n    </header>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  hintUI: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n  searchData: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  hintUI: state.UI.hintUI,\r\n  loading: state.UI.loading,\r\n  errors: state.UI.errors,\r\n  hint: state.data.hint\r\n});\r\n\r\nexport default connect(mapStateToProps, { searchData })(SearchBar);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Nav = props => {\r\n  return (\r\n    <nav>\r\n      <button onClick={props.handleShowMore}>Show more</button> |{\" \"}\r\n      <a href=\"#start\">Up</a> |{\" \"}\r\n      <button onClick={props.handleClear}>Clear</button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNav.propTypes = {\r\n  handleShowMore: PropTypes.func.isRequired,\r\n  handleClear: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Components\r\nimport InhabitantsList from \"../components/InhabitantsList\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport Nav from \"../components/Nav\";\r\n\r\n// redux\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getData,\r\n  searchFriends,\r\n  searchClear\r\n} from \"../redux/actions/dataActions\";\r\nimport store from \"../redux/store\";\r\n\r\nconst useFetchData = () => {\r\n  useEffect(() => {\r\n    store.dispatch(getData());\r\n  }, []); // started\r\n};\r\n\r\nconst Home = props => {\r\n  const [inhabitants, setInhabitants] = useState([]);\r\n  const [count, setCount] = useState(10);\r\n\r\n  useFetchData();\r\n\r\n  useEffect(() => {\r\n    setInhabitants(props.searchResult);\r\n  }, [props.hint, props.searchResult]); // search result\r\n\r\n  const handleSearchFriends = (e, name) => {\r\n    e.preventDefault();\r\n    props.searchFriends(name);\r\n  };\r\n\r\n  const handleShowMore = () => {\r\n    const newCount = count + 10;\r\n    setCount(newCount);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    props.searchClear();\r\n    setCount(10);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 id=\"start\">Brastlewark city population</h1>\r\n      <SearchBar />\r\n      {props.searchResult.length !== 0 ? (\r\n        <InhabitantsList\r\n          inhabitants={inhabitants}\r\n          number={count}\r\n          handleSearchFriends={handleSearchFriends}\r\n        />\r\n      ) : null}\r\n      {props.searchResult.length !== 0 ? (\r\n        <Nav handleShowMore={handleShowMore} handleClear={handleClear} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nHome.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  searchResult: PropTypes.array,\r\n  getData: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.data.data,\r\n  searchResult: state.data.searchResult\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  getData,\r\n  searchFriends,\r\n  searchClear\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Home);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\n// Components\r\nimport Home from \"./pages/home\";\r\n\r\n// redux\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <Provider store={store}>\r\n        <Home />\r\n      </Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}